// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Liftoff.h"

#define current_cutoff 13

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

Liftoff::Liftoff(double speed): Command() {
    m_speed = speed;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::climber.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void Liftoff::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void Liftoff::Execute() {
	/*
	static bool isClimbing = false;
	double speed = 0;

	double current = Robot::climber->GetCurrent();
	if(current >= current_cutoff){
		isClimbing = true;
	}


	if(isClimbing){
		speed = 1.0;
	}
	else{
		speed = 0.6;
	}


	Robot::climber->Spin(speed);
	*/

	Robot::climber->Spin(m_speed);
}


// Make this return true when this Command no longer needs to run execute()
bool Liftoff::IsFinished() {

	bool buttonValLow = Robot::oi->getManipulator()->GetRawButton(3); //retrieves button value
	bool buttonValHigh = Robot::oi->getManipulator()->GetRawButton(2);

	bool stop = (buttonValLow || buttonValHigh);

    return !stop;   //inverted to stop command when value is false
}

// Called once after isFinished returns true
void Liftoff::End() {
	Robot::climber->Stop();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void Liftoff::Interrupted() {

}

// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "FloorLoad.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

FloorLoad::FloorLoad(bool reverse): Command() {
    m_reverse = reverse;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::intake.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void FloorLoad::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void FloorLoad::Execute() {
	if (m_reverse == 1){
		Robot::intake->SpinReverse();
	}
	else{
		Robot::intake->SpinForward();
	}

}

// Make this return true when this Command no longer needs to run execute()
bool FloorLoad::IsFinished() {
	printf("IsFinished called\n");
	bool buttonVal;
	if(m_reverse){
		buttonVal= Robot::oi->getManipulator()->GetRawButton(6);
	}
	else{
		buttonVal = Robot::oi->getManipulator()->GetRawButton(5);
	}
	return !buttonVal;
}

// Called once after isFinished returns true
void FloorLoad::End() {

	Robot::intake->Stop();

	printf("Stop Intake!\n");
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void FloorLoad::Interrupted() {

}

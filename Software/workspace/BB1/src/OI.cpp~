// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveWithJoysticks.h"
#include "Commands/FloorLoad.h"
#include "Commands/Liftoff.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    joystick1.reset(new Joystick(0));
    
    stopLiftoff.reset(new JoystickButton(joystick1.get(), 2));
    stopLiftoff->WhenPressed(new Liftoff(2));
    startLiftoff.reset(new JoystickButton(joystick1.get(), 1));
    startLiftoff->WhenPressed(new Liftoff(0));

    // SmartDashboard Buttons
    SmartDashboard::PutData("Liftoff: idle", new Liftoff(0));
    SmartDashboard::PutData("Liftoff: climb", new Liftoff(1));
    SmartDashboard::PutData("Liftoff: stop", new Liftoff(2));
    SmartDashboard::PutData("Liftoff: abort", new Liftoff(3));
    SmartDashboard::PutData("Floor Load", new FloorLoad());
    SmartDashboard::PutData("Drive With Joysticks: defJoy", new DriveWithJoysticks(0, 0, 0));
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getJoystick1() {
   return joystick1;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

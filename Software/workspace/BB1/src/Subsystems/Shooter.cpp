// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Shooter.h"
#include "../RobotMap.h"
#include "CANTalon.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Shooter::Shooter() : Subsystem("Shooter") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    shooterMotor = RobotMap::shooterShooterMotor;
    hood = RobotMap::shooterHood;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS



    //Initializes the Talon and sets sensor information
	shooterMotor->SetFeedbackDevice(CANTalon::CtreMagEncoder_Relative); //CtreMagEncoder_Relative was old value
	shooterMotor->SetSensorDirection(false);
	shooterMotor->ConfigEncoderCodesPerRev(4096);

	shooterMotor->SetAllowableClosedLoopErr(0);
	shooterMotor->SelectProfileSlot(0);

	//TODO Update the PID values after tuning


	shooterMotor->SetF(0.0328);	//0.0328		//0.02
	shooterMotor->SetP(0.1);	//0.0005		//0.1
	shooterMotor->SetI(0.0002);	//0.00000003	//0.0001
	shooterMotor->SetD(0.0);	//0				//0

    shooterMotor->SetControlMode(frc::CANSpeedController::kSpeed);
    shooterMotor->Set(0.0);

}

void Shooter::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void Shooter::Spin(double speed){

	shooterMotor->Set(speed);

	SmartDashboard::PutNumber("GraphSetPt", -1.0 * speed);			//pushes set point speed to dashboard
	int sensorSpeed = shooterMotor->GetSpeed();			//gets current speed value from Talon
	SmartDashboard::PutNumber("GraphSpeed", sensorSpeed);	//pushes value to Smart Dashboard



}

void Shooter::Stop(){
	shooterMotor->Set(0.0);
	SmartDashboard::PutNumber("GraphSpeed", 0.0);
	SmartDashboard::PutNumber("GraphSetPt", 0.0);			//graphs 0 as final set point and speed


	printf("STOP shooter\n");
}
void Shooter::SetHoodPosition(double position){
	hood->Set(position);
}

void Shooter::SetPIDControlSlot(int slot){
	shooterMotor->SelectProfileSlot(slot);
}

int Shooter::GetFlywheelSpeed(){
	return shooterMotor->GetSpeed();
}
